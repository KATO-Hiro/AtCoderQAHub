.main
  .questions-wrapper
    .container
      .heading
        .questions
          - problem = Problem.find_by(task_id: params[:task_id])
          - atcoder = "https://atcoder.jp/contests/"
          - url = atcoder + problem.contest_id + "/tasks/" + problem.task_id

          .card
            h2.card-header
              = @question.title

              - posted_user = @question.user
              - space = " "

              .question__change-button--detail.pull-right
                - if @current_user && @current_user.id == posted_user.id
                  - url = "/problems/#{@question.task_id}/questions/#{@question.id}/edit"
                  = link_to("Edit", url, class: "btn btn-outline-dark")

                  / FIXME: Not beautiful
                  = space

                  - url = "/problems/#{@question.task_id}/questions/#{@question.id}/destroy"
                  = link_to("Delete", url, {method: "post", class: "btn btn-outline-danger"})

              p
                - url = @question.url

                - if url
                  = "See: "
                  = link_to(url, url)

              p.question__post-info--detail
                / See:
                  https://apidock.com/rails/ActionView/Helpers/DateHelper/time_ago_in_words
                = "#{posted_user.name}" + space + "posted this question" + space + time_ago_in_words(@question.created_at) + space + "ago"

            .card_body
              h5.card-title.question__problem-info--detail.dividing-line
                = link_to("#{problem.contest_id.upcase + ": " + problem.title}", url, target: "_blank", color: "black")

              .card-text.question__problem-info--detail
                = sanitize(markdown(@question.content))

          - logger.debug("[Debug]" +"#{@answer.nil?}")
          / 回答数と内容を表示
          h3.answer__count.dividing-line
            = "#{@answers.total_count}" + " Answer"

          .card

          - if @answers
            - @answers.each do |answer|
              .card-header
                - posted_user = User.find_by(id: answer.user_id)

                - if answer.created_at != answer.updated_at
                  - time_stamp  = time_ago_in_words(answer.updated_at)
                - else
                  - time_stamp  = time_ago_in_words(answer.created_at)

                span.answer__posted--user-name
                  = posted_user.name

                = space + "answered" + space + time_stamp + space + "ago"

                .answer__change-button--detail.pull-right
                  - if @current_user && @current_user.id == answer.user_id.to_i
                    - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/edit"
                    = link_to("Edit", url, class: "btn btn btn-outline-dark btn-sm")

                    = space

                    - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/destroy"
                    = link_to("Delete", url, {method: "post", class: "btn btn-outline-danger btn-sm"})

              .card-body
                .card-text.answer
                  .answer__left
                    .answer__vote
                      .answer__vote--liked
                        - is_up = @current_user && (@current_user.voted_up_on? answer)

                        - if is_up
                          - like = fa_icon "thumbs-up", class: "liked"
                          - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/cancel_like"
                        - else
                          - like = fa_icon "thumbs-up", class: "not-voted"
                          - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/like"

                        = link_to(like, url, {method: "put"})
                        = space
                        = answer.get_upvotes.size

                      .answer__vote--unliked
                        - is_down = @current_user && (@current_user.voted_down_on? answer)

                        - if is_down
                          - unlike = fa_icon "thumbs-down", class: "unliked"
                          - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/cancel_unlike"
                        - else
                          - unlike = fa_icon "thumbs-down", class: "not-voted"
                          - url = "/problems/#{@question.task_id}/questions/#{@question.id}/answers/#{answer.id}/unlike"

                        = link_to(unlike, url, {method: "put"})
                        = space
                        = answer.get_downvotes.size

                  .answer__right
                    = answer.content

            p.dividing-line
            = paginate @answers
            p.dividing-line

          - if @current_user
              - if @error_message
                .alert.alert-danger[role="alert"]
                  = @error_message

              h2
                | Create answer

              = form_tag("/problems/#{@question.task_id}/questions/#{@question.id}/answers/create") do
                .form
                  .form-group
                    textarea[name="content" class="form-control" id="answerContent" rows="5" placeholder="Enter answer (up to 400 characters)"]
                      = @content

                  p
                  input[type="submit" value="Comment" class="btn btn-success btn-sm"]
